:root {
  --font-base: 'Roboto', system-ui, sans-serif;
  --font-display: 'Arvo', system-ui, serif;

  --shadow-color: 220 3% 15%;
  --shadow-strength: 1%;

  --green-0: #ebfbee;
  --green-1: #d3f9d8;
  --green-2: #b2f2bb;
  --green-3: #8ce99a;
  --green-4: #69db7c;
  --green-5: #51cf66;
  --green-6: #40c057;
  --green-7: #37b24d;
  --green-8: #2f9e44;
  --green-9: #2b8a3e;
  --green-10: #237032;
  --green-11: #1b5727;
  --green-12: #133d1b;

  --stone-0: #f8fafb;
  --stone-1: #f2f4f6;
  --stone-2: #ebedef;
  --stone-3: #e0e4e5;
  --stone-4: #d1d6d8;
  --stone-5: #b1b6b9;
  --stone-6: #979b9d;
  --stone-7: #7e8282;
  --stone-8: #666968;
  --stone-9: #50514f;
  --stone-10: #3a3a37;
  --stone-11: #252521;
  --stone-12: #121210;

  --shadow-3:
    0 -1px 3px 0 hsl(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
    0 1px 2px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),
    0 2px 5px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 4%)),
    0 4px 12px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 5%)),
    0 12px 15px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 7%));

  --color-dark: #404040;
  --color-light: #f3f3f3;
  --color-light-glare: #fff;
  --color-primary: #183a1d;
  --color-primary-glare: #f4d0df;
  --color-secondary: #0369a1;
  --color-secondary-glare: #d8e2f4;
  --space-xs: clamp(0.75rem, 0.69rem + 0.29vw, 0.9375rem);
  --space-s: clamp(1rem, 0.92rem + 0.39vw, 1.25rem);
  --space-m: clamp(1.5rem, 1.38rem + 0.58vw, 1.875rem);
  --space-l: clamp(2rem, 1.84rem + 0.78vw, 2.5rem);
  --space-xl: clamp(3rem, 2.77rem + 1.17vw, 3.75rem);
  --space-2xl: clamp(4rem, 3.69rem + 1.55vw, 5rem);
  --space-3xl: clamp(6rem, 5.53rem + 2.33vw, 7.5rem);
  --space-xs-s: clamp(0.75rem, 0.59rem + 0.78vw, 1.25rem);
  --space-s-m: clamp(1rem, 0.73rem + 1.36vw, 1.875rem);
  --space-m-l: clamp(1.5rem, 1.19rem + 1.55vw, 2.5rem);
  --space-l-xl: clamp(2rem, 1.46rem + 2.72vw, 3.75rem);
  --space-l-2xl: clamp(2rem, 1.07rem + 4.66vw, 5rem);
  --space-xl-2xl: clamp(3rem, 2.38rem + 3.11vw, 5rem);
  --space-2xl-3xl: clamp(4rem, 2.91rem + 5.44vw, 7.5rem);
  --size-step-0: clamp(1rem, 0.92rem + 0.39vw, 1.25rem);
  --size-step-1: clamp(1.1875rem, 1.05rem + 0.68vw, 1.625rem);
  --size-step-2: clamp(1.4375rem, 1.11rem + 1.65vw, 2.5rem);
  --size-step-3: clamp(1.75rem, 1.19rem + 2.82vw, 3.5625rem);
  --size-step-4: clamp(2.0625rem, 1.15rem + 4.56vw, 5rem);
  --size-step-5: clamp(2.5rem, 1.08rem + 7.09vw, 7.0625rem);
  --size-step-6: clamp(3rem, 0.84rem + 10.78vw, 9.9375rem);
  --gutter: var(--space-s-m);
  --border-radius: 0.5rem;
  --transition-base: 250ms ease;
  --transition-movement: 200ms linear;
  --transition-fade: 200ms ease;
  --transition-bounce: 500ms cubic-bezier(0.5, 0.05, 0.2, 1.5);
  --tracking: -0.05ch;
  --tracking-s: -0.06ch
}

/* Modern reset: https://piccalil.li/blog/a-modern-css-reset/ */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Prevent zooming when orientation changes on some iOS devices */
html {
  text-size-adjust: none;
  -webkit-text-size-adjust: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Global style */
/*
  Global styles

  Low-specificity, global styles that apply to the whole
  project: https://cube.fyi/css.html
*/
body {
  color: var(--stone-10);
  background: var(--stone-0);
  font-size: var(--size-step-1);
  font-family: var(--font-base);
  line-height: 1.4;
  letter-spacing: var(--tracking);
}

/* Base typesetting */
h1,
h2,
h3 {
  line-height: 1;
  letter-spacing: var(--tracking-s);
  font-family: var(--font-display);
}

h1 {
  font-size: var(--size-step-5);
}

h2 {
  font-size: var(--size-step-4);
}

h3 {
  font-size: var(--size-step-3);
}

/* Set line lengths */
p,
li,
blockquote:not([class]) {
  max-width: 50ch;
}

h1,
h2,
h3 {
  max-width: 20ch;
}

blockquote {
  border-inline-start: 0.8rem solid var(--color-primary);
  padding: var(--space-m-l);
  font-size: var(--size-step-2);
}

blockquote>*+* {
  margin-top: var(--space-m-l);
}

blockquote :last-child {
  font-family: var(--font-base);
  font-style: normal;
  font-size: var(--size-step-1);
}

svg {
  height: 2ex;
  width: auto;
  flex: none;
}

[role='list'] {
  padding: 0;
}

/* Base interactive elements */

a {
  color: currentcolor;
}

a:hover {
  text-decoration: none;
}

:focus {
  outline: 3px solid;
  outline-offset: 0.3ch;
}

:target {
  scroll-margin-top: 2ex;
}

main:focus {
  outline: none;
}

toggle-section:focus {
  outline: none;
}

/* Base selection styles that invert whatever colours are rendered */
::selection {
  background: var(--color-dark);
  color: var(--color-light);
}

.preload-transitions * {
  transition: none !important;
}

nav a {
  text-decoration: none;
}

/* Prose */

.prose {
  --flow-space: var(--space-m-l);
  --wrapper-max-width: 55rem;
}

.prose :is(h2, h3, h4)+* {
  --flow-space: var(--space-s-m);
}

.prose .heading-anchor:is(:hover, :focus) {
  text-decoration: underline;
}

.prose .heading-anchor {
  text-decoration: none;
}

.prose mark {
  background: var(--color-primary-glare);
}

/* stack primitive */

.stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.stack>* {
  margin-block: 0;
}

.stack>*+* {
  margin-block-start: var(--s1, 1.5rem);
}

.stack-sm {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.stack-sm>* {
  margin-block: 0;
}

.stack-sm>*+* {
  margin-block-start: var(--s-1, 1rem);
}

/* cluster primitive */

.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--s0, 1rem);
  justify-content: flex-start;
  align-items: center;
}

/* switcher primitive */

.switcher {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter);
}

.switcher>* {
  flex-grow: 1;
  flex-basis: calc((30rem - 100%) * 999);
}

.switcher> :nth-last-child(n+ 5),
.switcher> :nth-last-child(n+ 5)~* {
  flex-basis: 100%;
}

/* frame primitive */

.frame {
  --n: 16;
  --d: 9;
  aspect-ratio: var(--n) / var(--d);
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: var(--border-radius);

}


.frame>img,
.frame>video {
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
}

.frame.staff {
  --n: 1;
  --d: 1;
  aspect-ratio: var(--n) / var(--d);
  border-radius: 50%;
}

/* AUTO GRID
Related Every Layout: https://every-layout.dev/layouts/grid/
More info on the flexible nature: https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/
A flexible layout that will create an auto-fill grid with
configurable grid item sizes

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--grid-min-item-size (14rem): How large each item should be
ideally, as a minimum.

--grid-placement (auto-fill): Set either auto-fit or auto-fill
to change how empty grid tracks are handled */
.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-placement, auto-fill),
      minmax(var(--grid-min-item-size, 16rem), 1fr));
  gap: var(--gutter, var(--space-s-l));
}

.grid[data-rows='masonry'] {
  grid-template-rows: masonry;
  align-items: start;
}

.grid[data-layout='50-50'] {
  --grid-placement: auto-fit;
  --grid-min-item-size: clamp(16rem, 50vw, 26rem);
}

.grid[data-layout='3/3'] {
  --grid-placement: auto-fit;
  --grid-min-item-size: clamp(16rem, 50vw, 25rem);
}

.overflow-hidden {
  overflow: hidden
}

.with-sidebar-left {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter);
}

.with-sidebar-left> :first-child {
  flex-basis: 30rem;
  flex-grow: 1;
}

.with-sidebar-left> :last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: 40%;
}

.with-sidebar-right {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter);
}

.with-sidebar-right> :last-child {
  flex-basis: 30rem;
  flex-grow: 1;
}

.with-sidebar-right> :first-child {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: 40%;
}


.reel {
  display: flex;
  block-size: auto;
  overflow-x: auto;
  overflow-y: hidden;
}

.reel::-webkit-scrollbar {
  block-size: 1rem;
}

.reel::-webkit-scrollbar-track {
  background-color: var(--color-brand-text);

}

.reel::-webkit-scrollbar-thumb {
  background-color: var(--color-lightish);
  background-image: linear-gradient(var(--color-brand-text) 0, var(--color-brand-text) 0.25rem, var(--color-lightish) 0.25rem, var(--color-lightish) 0.75rem, var(--color-brand-text) 0.75rem);
}

.reel>* {
  flex: 0 0 auto;
}

.reel>img {
  block-size: 100%;
  flex-basis: auto;
  width: auto;
}

.reel>*+* {
  margin-inline-start: 1rem;
}

.reel.overflowing {
  padding-block-end: 1rem;
}


/* utility */


.text-align\:center {
  text-align: center;
  max-width: unset;
}

.max-width\:30ch {
  max-width: 30ch;
}

.align-self\:flex-end {
  align-self: flex-end;
}

.justify-content\:space-between {
  justify-content: space-between;
}

.justify-content\:flex-end {
  justify-content: flex-end;
}

.justify-content\:flex-start {
  justify-content: flex-start;
}

.align-items\:center {
  align-items: center;
}

.justify-content\:center {
  justify-content: center;
}

.bg-green {
  background-color: var(--green-12);
  color: var(--color-light);
}

.color\:color-dark {
  color: var(--color-dark);
}

.margin\:auto {
  margin: auto;
}

.color\:color-light {
  color: var(--color-light);
}


.border-bottom {
  border-bottom: solid var(--border-thin) #19220c;
}

.flex-wrap\:wrap-reverse {
  flex-wrap: wrap-reverse;
}

.padding\:s3 {
  padding: var(--s3);
}

.aff {
  inline-size: 125px;
}

.grid-gap\:0 {
  grid-gap: 0;
}

.radius {
  border-radius: 0.50rem;
}

.logo {
  display: flex;
  align-items: center;
  font-family: var(--font-display);
  text-decoration: none;
  font-size: var(--size-step-1);
}

.logo img {
  width: 40px;
}

.measure {
  max-width: var(--measure);
}

.hero {
  display: grid;
  height: calc(300px + 15vmin);
}

.hero>* {
  grid-area: 1/-1;
}

.hero__media {
  width: 100%;
  height: 100%;
  min-height: 0;
  object-fit: cover;
}

.hero__content {
  z-index: 1;
  display: flex;
  flex-direction: column;
  text-align: center;
  justify-content: center;
  color: var(--color-light);
}

.hero:after {
  content: "";
  background-color: var(--green-12);
  opacity: 0.5;
  grid-area: 1/-1;
}


button {
  display: inline-flex;
  white-space: nowrap;

  padding-inline: var(--space-s);
  padding-block: var(--space-xs);

  color: var(--green-10);
  border: 2px solid var(--green-10);
  border-color: var(--green-10);
  background-color: transparent;
  border-radius: var(--border-radius);
}

button:hover {
  background-color: var(--green-10);
  color: var(--stone-1);
}


.link {
  text-decoration: underline;
  color: var(--green-8);
}

.link:hover {
  text-decoration: underline;
  background-color: var(--green-3);
}



.leaf {
  background-image: url(../images/leaf1.svg), url(../images/leaf1-rotated.svg);
  background-position: right bottom, left top;
  background-size: 25vh, 25vh;
  background-repeat: no-repeat, no-repeat;
}

.leaf2 {
  background-image: url(../images/leaf4.svg);
  background-position: right;
  background-repeat: no-repeat;

}

.nav {
  padding: var(--space-s) 0;
}

nav ul {
  padding: 0;
}

nav [aria-current="page"] {
  text-decoration: underline 3px var(--green-7);
}

.footer-nav [aria-current="page"] {
  text-decoration: underline 3px var(--green-7);
}



.skip-link {
  position: absolute;
  top: var(--s0);
  left: var(--s0);
  z-index: 99;
}

.skip-link:not(:focus) {
  border: 0;
  clip: rect(0 0 0 0);
  height: 0;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

/* Utilities */


/* 
FLOW UTILITY
Like the Every Layout stack: https://every-layout.dev/layouts/stack/
Info about this implementation: https://piccalil.li/quick-tip/flow-utility/ 
*/
.flow>*+* {
  margin-top: var(--flow-space, 1em);
}

/* 
  REGION UTILITY
  Consistent block padding for page sections
  */
.region {
  padding-top: var(--region-space-top, var(--space-l-2xl));
  padding-bottom: var(--region-space-bottom, var(--space-l-2xl));
}

.region-bottom {
  padding-block: var(--s3);
}

/**
 * WRAPPER
 * Sets a max width, adds a consistent gutter and horizontally
 * centers the contents
 * Info: https://piccalil.li/quick-tip/use-css-clamp-to-create-a-more-flexible-wrapper-utility/
 */
.wrapper {
  max-width: var(--wrapper-max-width, 85rem);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--gutter);
  padding-right: var(--gutter);
  /* position: relative; */
}

/* breakout content elements to wrapper based on full bleed image solution by josh cumeau. https://www.joshwcomeau.com/css/full-bleed/ */

.content {
  --wrapper-max-width: 75rem;
  display: grid;
  grid-template-columns:
    1fr min(48ch, 100%) 1fr;
}

.content>* {
  grid-column: 2;
}

.content .breakout {
  width: 100%;
  grid-column: 1 / 4;
}


/* 
  VISUALLY HIDDEN UTILITY
  Info: https://piccalil.li/quick-tip/visually-hidden/ 
  */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 0;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

.mt-l-xl {
  margin-top: clamp(2rem, 1.46rem + 2.72vw, 3.75rem)
}

/*
Custom elements are inline by default
*/
toggle-section {
  display: block;
}

toggle-section h2 {
  font-family: var(--font-serif);
}

/*
Only applies if script runs and 
`role="region"` is added
*/
toggle-section[role="region"] {
  border-width: 2px 0;
  border-style: solid;
}

toggle-section[role="region"]+toggle-section {
  border-top: 0;
}

/* card */

.card {
  background-color: var(--stone-2);
  border: 4px solid var(--stone-2);
  color: var(--stone-10);
  padding: var(--space-m-l);
  border-radius: var(--border-radius);
  max-width: unset;
}

.card ::selection {
  color: var(--stone-0);
  background: var(--stone-10);
}

.card h2 {
  font-size: var(--size-step-3);
}

.card h2 a,
.card h3 a {
  text-decoration: none;
}

.card:hover,
.card:focus-within {
  box-shadow: var(--shadow-3);
}

.card a {
  text-decoration: none;
}

/* 'clickable' */

.card:focus-within a:focus {
  outline: none;
}

.card {
  position: relative;
}

.card a:after {
  bottom: 0;
  content: '';
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

.card small {
  font-size: var(--size-step-0);
}

ul {
  padding-inline-start: 0;
}

@keyframes fadein {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}



.icon {
  width: 0.75em;
  width: 1cap;
  height: 0.75em;
  height: 1cap;
}

.with-icon {
  align-items: baseline;
  width: fit-content;
}

.with-icon .icon {
  margin-inline-end: 1rem;
}

nav a:is(:hover, :focus) {
  color: var(--green-7);
}

.logo:is(:hover, :focus) {
  color: var(--green-7);
}

.site-foot {
  background: var(--green-12);
  color: var(--stone-0);
  padding: var(--space-s-m)
}

.site-foot__inner {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-xs-s);
  justify-content: center
}

.site-foot svg {
  height: 1em;
  width: 1em
}